// <auto-generated />
using System;
using AgroFlow.Central.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AgroFlow.Central.Migrations
{
    [DbContext(typeof(CentralDbContext))]
    [Migration("20250809011827_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AgroFlow.Central.Models.Agricultor", b =>
                {
                    b.Property<Guid>("AgricultorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Finca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("AgricultorId");

                    b.ToTable("Agricultores");
                });

            modelBuilder.Entity("AgroFlow.Central.Models.Cosecha", b =>
                {
                    b.Property<Guid>("CosechaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("AgricultorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreadoEn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<Guid?>("FacturaId")
                        .HasColumnType("uuid");

                    b.Property<string>("Producto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Toneladas")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("CosechaId");

                    b.HasIndex("AgricultorId");

                    b.ToTable("Cosechas", t =>
                        {
                            t.HasCheckConstraint("CK_Cosecha_Toneladas_Positive", "toneladas > 0");
                        });
                });

            modelBuilder.Entity("AgroFlow.Central.Models.Cosecha", b =>
                {
                    b.HasOne("AgroFlow.Central.Models.Agricultor", "Agricultor")
                        .WithMany("Cosechas")
                        .HasForeignKey("AgricultorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agricultor");
                });

            modelBuilder.Entity("AgroFlow.Central.Models.Agricultor", b =>
                {
                    b.Navigation("Cosechas");
                });
#pragma warning restore 612, 618
        }
    }
}
